@model EprocurementWeb.Models.ProveedorRegistro

@{
    ViewBag.Title = @RHome.Title;
}

<form action="/Home/Index" method="post" class="registro-form" id="form_fact" name="form_fact">
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-sm-12 t-a-c">
                <h1>
                    @RHome.ProvP
                </h1>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-12 t-a-c">
                <h3>
                    @RHome.TitlePP
                </h3>
            </div>

        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-primary b-c-p">
                    <div class="panel-heading b-c-p-h">
                        <h3 class="panel-title">
                            Detalles de la compañía
                        </h3>
                        <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.Label("empresa", @RHome.NameOfCompany, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.NombreEmpresa, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("razonSocial", @RHome.BName, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.RazonSocial, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("rfc", @RHome.RFC, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.RFC, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("nif", @RHome.NIF, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.NIF, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("telefono", @RHome.Phone, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.ProvTelefono, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("fax", @RHome.Fax, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.ProvFax, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("paginaWeb", @RHome.WPage, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.PaginaWeb, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("zonaHoraria", @RHome.TZone, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.IdZonaHoraria, new SelectList(ViewBag.ZonaHorariaList, "IdZonaHoraria", "Nombre"), RHome.DefaultSelect, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("tipoProveedor", @RHome.ProvType, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.IdTipoProveedor, new SelectList(ViewBag.TipoProveedorList, "IdTipoProveedor", "Tipo"), RHome.DefaultSelect, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("axNumeroProveedor", @RHome.AXProviderNum, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.AXNumeroProveedor, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("nacionalidad", @RHome.Nacionality, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.IdNacionalidad, new SelectList(ViewBag.NacionalidadList, "IdNacionalidad", "Nombre"), RHome.DefaultSelect, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("codigo", @RHome.ZipCode, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Direccion.CodigoPostal, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("colonia", @RHome.Suburb, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Direccion.Colonia, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("direccion", @RHome.Address, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("pais", @RHome.Country, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Direccion.IdPais, new SelectList(ViewBag.PaisList, "IdPais", "Nombre"), RHome.DefaultSelect, new { @class = "form-control", @id = "PaisProveedor" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("estado", @RHome.State, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Direccion.IdEstado, new SelectList(Enumerable.Empty<EPROCUREMENT.GAPPROVEEDOR.Entities.EstadoDTO>(), "IdEstado", "Nombre"), RHome.DefaultSelect, new { @class = "form-control", @id = "EstadoProveedor" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("municipio", @RHome.City, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Direccion.IdMunicipio, new SelectList(Enumerable.Empty<EPROCUREMENT.GAPPROVEEDOR.Entities.MunicipioDTO>(), "idMunicipio", "Nombre"), RHome.DefaultSelect, new { @class = "form-control", @id = "MunicipioProveedor" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary b-c-p">
                <div class="panel-heading b-c-p-h">
                    <h3 class="panel-title">
                        Detalles del contacto
                    </h3>
                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="form-group col-md-12 ">
                            @Html.Label("contacto", @RHome.CName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Contacto.NombreContacto, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.Label("cargo", @RHome.Position, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Contacto.Cargo, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("nacionalidad", @RHome.Nacionality, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Contacto.IdNacionalidad, new SelectList(ViewBag.NacionalidadList, "IdNacionalidad", "Nombre"), RHome.DefaultSelect, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.Label("teledonoDirecto", @RHome.CPhone, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Contacto.TelefonoDirecto, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("movil", @RHome.CellPhone, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Contacto.TelefonoMovil, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.Label("fax", @RHome.Fax, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Contacto.Fax, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("emailContacto", @RHome.Email, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Contacto.Email, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.Label("paisContacto", @RHome.Country, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Contacto.IdPais, new SelectList(ViewBag.PaisList, "IdPais", "Nombre"), RHome.DefaultSelect, new { @class = "form-control" })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("zonaHorariaConctacto", @RHome.TZone, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Contacto.IdZonaHoraria, new SelectList(ViewBag.ZonaHorariaList, "IdZonaHoraria", "Nombre"), RHome.DefaultSelect, new { @class = "form-control" })

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12 ">

                            @Html.Label("idioma", @RHome.Language, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Contacto.IdIdioma, new SelectList(ViewBag.IdiomaList, "IdIdioma", "NombreIdioma"), RHome.DefaultSelect, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary b-c-p">
                <div class="panel-heading b-c-p-h">
                    <h3 class="panel-title">
                        Especialidades de la empresa
                    </h3>
                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                </div>
                <div class="panel-body">
                    <div class="row">

                    </div>

                    @Html.Label("", "Marque los Aeropuertos que puede atender*", new { @class = "control-label" })


                    <ul id="wkslist" class="ulChk">
                        @for (int idx = 0; idx < Model.AeropuertoList.Count; idx++)
                        {
                            @Html.HiddenFor(model => model.AeropuertoList[idx].Id)
                            @Html.HiddenFor(model => model.AeropuertoList[idx].Nombre)
                            <li>
                                @Html.CheckBoxFor(model => model.AeropuertoList[idx].Checado)
                                @Html.DisplayTextFor(model => model.AeropuertoList[idx].Nombre)
                            </li>
                        }
                    </ul>

                    @Html.Label("", "Favor de seleccionar el (los) giro (s) específicos que su empresa esta calificada (Máximo 5)*", new { @class = "control-label " })

                    @for (int idx = 0; idx < 5; idx++)
                    {
                        @Html.HiddenFor(model => model.ProveedorGiroList[idx].IdProveedorGiro)
                        <div class="form-group col-md-12 sel-p">
                            @Html.Label("Giro1:", new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(x => x.ProveedorGiroList[idx].IdCatalogoGiro, new SelectList(ViewBag.GiroList, "IdGiro", "GiroNombre"), RHome.DefaultSelect)
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
    <div class="row ">
        <ul id="condiciones" class="chkCondiciones">

            <li>
                <input type="checkbox" data-val="true" data-val-required="Es necesario aceptar los términos y condiciones." id="termino" name="termino" value="true" required>
                <a href="#" data-toggle="modal" data-target="#modalTerminos" class="a-c">
                    He leído y acepto los Términos y condiciones*
                </a>

            </li>
            <li>
                <input type="checkbox" data-val="true" data-val-required="Es necesario aceptar el aviso de privacidad" id="avisos" name="avisos" value="true" required>
                <a href="#" data-toggle="modal" data-target="#modalAviso" class="a-c">
                    He leído y acepto el Aviso de privacidad*

                </a>
            </li>
        </ul>


    </div>

    <!-- Modal -->

    <div class="row">
        <div class="col-sm-6">
            <button class="btnStyle" type="submit">Cancelar</button>
        </div>
        <div class="col-sm-6">
            <button class="btnStyle" type="submit">Aceptar</button>
        </div>
    </div>
    <div id="modalTerminos" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Términos y condiciones</h4>
                </div>
                <div class="modal-body">

                    <embed src="~/Content/PDF/PruebaTerminos.pdf" frameborder="0" width="100%" height="400px">

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div id="modalAviso" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Aviso de privacidad</h4>
                </div>
                <div class="modal-body">

                    <embed src="~/Content/PDF/PruebaAvisos.pdf" frameborder="0" width="100%" height="400px">

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>


<div class="row">
    <div class="col-md-12 text-center">
        <p class="text-center">
            @* <img src="@Url.GetImage("Welcome.jpg")" alt="Welcome"/>*@
        </p>

    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("#PaisProveedor").change(function () {
            var dID = $('#PaisProveedor option:selected').val();
            $.getJSON("/Home/GetEstados", { idPais: dID },
                function (data) {
                    var select = $("#EstadoProveedor");
                    var selectMunicipio = $("#MunicipioProveedor");
                    select.empty();
                    selectMunicipio.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "..."
                    }));
                    selectMunicipio.append($('<option/>', {
                        value: 0,
                        text: "..."
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.IdEstado,
                            text: itemData.Nombre
                        }));
                    });
                });
        });

        $("#EstadoProveedor").change(function () {
            var dID = $('#EstadoProveedor option:selected').val();
            $.getJSON("/Home/GetMunicipios", { idEstado: dID },
                function (data) {
                    var select = $("#MunicipioProveedor");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "..."
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.IdMunicipio,
                            text: itemData.Nombre
                        }));
                    });
                });
        });
        /// Cargar Paises
        //$.ajax({
        //    url: "/Home/GetPaisesList",
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
        //    datatype: JSON,
        //    success: function (result) {
        //        $(result).each(function () {
        //            $("#pais").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        });
        //        $(result).each(function () {
        //            $("#paisConctacto").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        });
        //    },
        //    error: function (data) { }
        //});

        ///// Cargar Aeropuertos
        //$.ajax({
        //    url: "/Home/GetAeropuertosList",
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
        //    datatype: JSON,
        //    success: function (result) {
        //        $.each(result, function (key, value) {
        //            var li = $('<li><input  type="checkbox" name="' + key + '" id="' + key + '"/>' +
        //                '<label for="' + key + '"></label></li>');
        //            li.find('label').text(value.GiroNombre);
        //            $('#wkslist').append(li);
        //        });
        //    },
        //    error: function (data) { }
        //});

        /// Cargar Giros
        //$.ajax({
        //    url: "/Home/GetGirosList",
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
        //    datatype: JSON,
        //    success: function (result) {
        //        $(result).each(function () {
        //            $("#giro1").append($("<option></option>").val(this.IdGiro).html(this.GiroNombre));
        //        });
        //        $(result).each(function () {
        //            $("#giro2").append($("<option></option>").val(this.IdGiro).html(this.GiroNombre));
        //        });
        //        $(result).each(function () {
        //            $("#giro3").append($("<option></option>").val(this.IdGiro).html(this.GiroNombre));

        //        });
        //        $(result).each(function () {
        //            $("#giro4").append($("<option></option>").val(this.IdGiro).html(this.GiroNombre));
        //        });
        //        $(result).each(function () {
        //            $("#giro5").append($("<option></option>").val(this.IdGiro).html(this.GiroNombre));
        //        });
        //        //$(result).each(function () {u eres
        //        //    $("#paisConctacto").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        //});
        //    },
        //    error: function (data) { }
        //});
        /// Cargar Giros
        //$.ajax({
        //    url: "/Home/GetZonaHorariaList",
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
        //    datatype: JSON,
        //    success: function (result) {
        //        $(result).each(function () {
        //            $("#zonaHoraria").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        });
        //        $(result).each(function () {
        //            $("#zonaHorariaContacto").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        });

        //    },
        //    error: function (data) { }
        //});

        /// Cargar Nacionalidad
        //$.ajax({
        //    url: "/Home/GetNacionalidadList",
        //    type: "GET",
        //    contentType: "application/json; charset=utf-8",
        //    datatype: JSON,
        //    success: function (result) {
        //        $(result).each(function () {
        //            $("#nacionalidad").append($("<option></option>").val(this.IdPais).html(this.Nombre));
        //        });


        //    },
        //    error: function (data) { }
        //});






    });
</script>
